application.secret="W^icdBRdaWi7nf342ocG>BA869wwry]9<Cqm7Xi<WbKFNPtgw^qqKdrI?YBy=79Z"

# ssh -L 3307:localhost:3306 root@107.21.134.19  (for qa-db-1; then root and no pwd)
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost:3306/titan_1_0"
db.default.user=api
db.default.password=api

# ssh -L 3305:localhost:3306 root@prd-db-report-ext.netpulse.ws
db.report.driver=com.mysql.jdbc.Driver
db.report.url="jdbc:mysql://localhost:3305/report"
db.report.user=ReportUser
db.report.password=ReportUser


logger.root=ERROR
logger.play=ERROR
logger.application=DEBUG


vt.path.prefix="https://vtqa.lftechsupport.com/vtgwt"
#vt.path.prefix="https://lfvtqagwt.lftechsupport.com/vt"
vt.timeout="20000"
dino.timeout="19999"


# Production:
# vt.path.prefix="https://www.virtualtrainer.lifefitness.com/vt/"
vt.path.validate="/api/account/validate_new_account"
vt.path.register="/api/account/register"
vt.path.link="/api/account/link_external_user"
vt.path.login="/api/account/login"
vt.path.logout="/api/account/logout"
vt.path.predefinedPresets="/api/workout_preset/get_predefined_presets"
vt.path.workouts="/api/workout_preset/get_workouts"

# Virtual Trainer Consumer Key and Secret for NETPULSE:
vt.consumer.key="NETPULSEAPI"
vt.consumer.secret="f0e51dd38e6ff86b256e9"


# Set a connection's default autocommit setting
#db.default.autocommit=true

# Set a connection's default isolation level
#db.default.isolation=READ_COMMITTED

# In order to reduce lock contention and thus improve performance,
# each incoming connection request picks off a connection from a
# pool that has thread-affinity.
# The higher this number, the better your performance will be for the
# case when you have plenty of short-lived threads.
# Beyond a certain threshold, maintenance of these pools will start
# to have a negative effect on performance (and only for the case
# when connections on a partition start running out).
db.default.partitionCount=3

# The number of connections to create per partition. Setting this to
# 5 with 3 partitions means you will have 15 unique connections to the
# database. Note that BoneCP will not create all these connections in
# one go but rather start off with minConnectionsPerPartition and
# gradually increase connections as required.
db.default.maxConnectionsPerPartition=5

# The number of initial connections, per partition.
db.default.minConnectionsPerPartition=5

# When the available connections are about to run out, BoneCP will
# dynamically create new ones in batches. This property controls
# how many new connections to create in one go (up to a maximum of
# maxConnectionsPerPartition). Note: This is a per-partition setting.
db.default.acquireIncrement=1

# After attempting to acquire a connection and failing, try to
# connect this number of times before giving up.
db.default.acquireRetryAttempts=10

# How long to wait (in milliseconds) before attempting to obtain a
# connection again after a failure.
db.default.acquireRetryDelay=5000

# The maximum time (in milliseconds) to wait before a call
# to getConnection is timed out.
db.default.connectionTimeout=1000

# Idle max age (in seconds).
db.default.idleMaxAge=60

# An initial SQL statement that is run only when
# a connection is first created.
db.default.initSQL=SELECT 1

# If enabled, log SQL statements being executed.
db.default.logStatements=false
db.report.logStatements=true

# The maxiumum connection age (in seconds).
db.default.maxConnectionAge=60



# Logger                - https://github.com/playframework/Play20/wiki/SettingsLogger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .


