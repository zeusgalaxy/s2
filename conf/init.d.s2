#!/bin/sh
# Start and stop the s2, scala play server
#
# Copy this file into /etc/init.d and give it execute rights: chmod _x /etc/init.d
#
S2PATH=/mnt/s2
S2USER=jetty
PIDFILE=$S2PATH/RUNNING_PID

start() {
    if [ ! -f $PIDFILE ]; then
      echo "Starting s2"
      cd $S2PATH
      sudo -u $S2USER nohup ./start -Dlogger.resource=logger.xml &
    else
      echo "A pidfile ($PIDFILE) means s2 might already be running.  Please remove and rerun if this is not so."
    fi
} 

stop() {
    if [ -f $PIDFILE ]; then
      PID=`cat $PIDFILE`
      echo "Stopping s2 pid=$PID"
      sudo -u $S2USER kill $PID
      # wait until really stopped
      i=0
      while kill -0 "${PID:-}" 2> /dev/null;  do
          if [ $i = '60' ]; then
             break;
          else
             if [ $i = '0' ]; then
               echo -n " ... waiting "
             else
               echo -n "."
             fi
             i=$(($i+1))
             sleep 1
          fi
      done
      echo "s2 stopped."
    else
      echo "It doesn't look like s2 is running"
    fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
   ;;
  restart)
    stop
    start
    ;;
  # Anything else
  *)
    echo "Usage: service s2 [start|stop|restart]"
    ;;
esac
exit 0
