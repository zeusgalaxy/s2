<project name="s2_deploy" default="deploy" basedir="..">
  <tstamp>
    <format property="NOW" pattern="yyyy_MM_dd_hh_mm_ss" />
  </tstamp>

  <property name="s2.remote.owner" value="jetty"/>
  <property name="s2.remote.user" value="root"/>
  <property name="s2.remote.password" value="something"/>
  <property name="s2.remote.symlink" value="${s2.remote.basedir}/latest"/>
  <property name="s2.remote.basedir" value="/mnt/s2/${NOW}"/>
  <property name="s2.remote.servicename" value="s2"/>

  <property environment="env"/>
  <property name="config.file" value="conf/base.conf"/>
  <property name="dist.dir" value="${basedir}/dist"/>
  <property file="${config.file}"/>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <fileset dir="lib/ant">
        <include name="*.jar"/>
      </fileset>
    </classpath>
  </taskdef>

  <target name="compile" >
    <exec executable="play">
      <arg value="-Dconfig.file=${config.file}"/>
      <arg value="compile"/>
    </exec>
  </target>

  <!-- 
    package create the zip to be transferred to the server.
    It sets the 'dist.package.path' property to the fully-qualified path
    to the dist zip file -->
  <target name="package" depends="compile">
    <exec executable="play" outputproperty="raw.dist.package.path"
        failonerror="true">
      <arg value="-Dconfig.file=${config.file}"/>
      <arg value="dist"/>
    </exec>
    <propertyregex 
        property="dist.package.path"
        input="${raw.dist.package.path}"
        regexp="Your application is ready in (.*)"
        select="\1"
        casesensitive="false" />
  </target>

  <macrodef name="copy_dist">
    <attribute name="dist_file"/>
    <attribute name="to_dir"/>
    <attribute name="remote_server"/>
    <attribute name="remote_user"/>
    <sequential>
      <scp 
          trust="true"
          localFile="@{local_dist_file}" 
          todir="@{remote_user}@@{remote_server}:@{to_dir}"/>
    </sequential>
  </macrodef>

  <target name="deploy_single" depends="package" >
    <copy_dist 
        dist_file="${dist.package.path}"
        to_dir="${s2.remote.basedir}"
        remote_server="${server}"
        remote_user="${s2.remote.user}"
      />

    <basename property="dist.package.basename" file="${dist.package.path}"/>
    <propertyregex 
        property="s2.remote.targetdir"
        input="${dist.package.basename}"
        regexp="(.*)\.zip"
        select="${s2.remote.basedir}/\1"
        casesensitive="false" />

<!-- props
  <property name="s2.remote.symlink" value="${s2.remote.basedir}/latest"/>
  <property name="s2.remote.basedir" value="/mnt/s2/${NOW}"/>
  <property name="s2.remote.targetdir" value="${s2.remote.basedir}/<package>"/>
-->
    <sshexec host="${server}" username="${s2.remote.user}" 
        command="mkdir ${s2.remote.basedir} && cd ${s2.remote.basedir} && unzip ${dist.package.basename}"/>

    <sshexec host="${server}" username="${s2.remote.user}" 
        command="chown -R ${s2.remote.owner} ${s2.remote.basedir}"/>

    <sshexec host="${server}" username="${s2.remote.user}" 
        command="chmod a+x ${s2.remote.targetdir}/start"/>

    <sshexec host="${server}" username="${s2.remote.user}" 
        command="echo \"deployed: `date`\" \>\> ${s2.remote.targetdir}/DEPLOY_HISTORY"/>

    <sshexec host="${server}" username="${s2.remote.user}" 
        command="echo \"archived: `date`\" \>\> ${s2.remote.symlink}/DEPLOY_HISTORY"/>

    <sshexec host="${server}" username="${s2.remote.user}" command="service s2 stop"/>

    <sshexec host="${server}" username="${s2.remote.user}" 
        command="ln -sf ${s2.remote.targetdir} ${s2.remote.symlink}"/>

    <sshexec host="${server}" username="${s2.remote.user}" command="service s2 start"/>
  </target>

  <property name="s2.remote.servicename" value="s2"/>
    <!-- FIXME: add the rest -->
  </target>

  <target name="deploy" depends="package" >
    <foreach 
        list="${application.server_list}" 
        delimiter="," 
        parallel="true"
        param="server" 
        target="deploy_single"/>
  </target>
</project>
